# syntax=docker/dockerfile:1
# SPDX-FileCopyrightText: Copyright (C) SchedMD LLC.
# SPDX-License-Identifier: Apache-2.0

ARG REGISTRY=ghcr.io/slinkyproject

################################################################################
FROM ${REGISTRY}/slurmd:25.11-ubuntu24.04 AS download

SHELL ["bash", "-c"]

ARG TARGETARCH
ARG DEBIAN_FRONTEND=noninteractive

USER root
WORKDIR /tmp/

RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
  --mount=type=cache,target=/var/lib/apt,sharing=locked <<EOR
# Download Latest Versions
set -xeuo pipefail
apt-get -qq update
apt-get -qq -y install --no-install-recommends \
  ca-certificates wget jq
# Determine Latest Versions
ENROOT_VERSION="$(wget -qO - https://api.github.com/repos/NVIDIA/enroot/releases/latest | jq -r '.tag_name')"
ENROOT_VERSION="${ENROOT_VERSION/#v}"
PYXIS_VERSION="$(wget -qO - https://api.github.com/repos/NVIDIA/pyxis/releases/latest | jq -r '.tag_name')"
PYXIS_VERSION="${PYXIS_VERSION/#v}"
# Download
wget -N https://github.com/NVIDIA/enroot/releases/download/v${ENROOT_VERSION}/enroot_${ENROOT_VERSION}-1_${TARGETARCH}.deb
wget -N https://github.com/NVIDIA/enroot/releases/download/v${ENROOT_VERSION}/enroot+caps_${ENROOT_VERSION}-1_${TARGETARCH}.deb
wget -N -O /usr/share/bash-completion/completions/enroot https://raw.githubusercontent.com/NVIDIA/enroot/refs/tags/v${ENROOT_VERSION}/conf/bash_completion
wget -N -P /etc/enroot/hooks.d/ \
  https://raw.githubusercontent.com/NVIDIA/enroot/refs/tags/v${ENROOT_VERSION}/conf/hooks/extra/50-mig-config.sh \
  https://raw.githubusercontent.com/NVIDIA/enroot/refs/tags/v${ENROOT_VERSION}/conf/hooks/extra/50-sharp.sh \
  https://raw.githubusercontent.com/NVIDIA/enroot/refs/tags/v${ENROOT_VERSION}/conf/hooks/extra/50-slurm-pmi.sh \
  https://raw.githubusercontent.com/NVIDIA/enroot/refs/tags/v${ENROOT_VERSION}/conf/hooks/extra/50-slurm-pytorch.sh
chmod 755 -R /etc/enroot/hooks.d/
wget -N -O pyxis.tar.gz https://github.com/NVIDIA/pyxis/archive/refs/tags/v${PYXIS_VERSION}.tar.gz
EOR

# Ref: https://github.com/NVIDIA/pyxis?tab=readme-ov-file#with-a-deb-package
# Ref: https://github.com/NVIDIA/enroot/blob/25.11/doc/installation.md
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
  --mount=type=cache,target=/var/lib/apt,sharing=locked <<EOR
# Generate Pyxis DEB
set -xeuo pipefail
apt-get -qq update
apt-get -qq -y install --no-install-recommends \
  build-essential \
  git gcc make libcap2-bin libtool automake libmd-dev \
  fakeroot devscripts equivs \
  tar
mkdir pyxis
tar -zxvf pyxis.tar.gz -C pyxis --strip-components=1
cd pyxis
make orig
make deb
EOR

################################################################################
FROM ${REGISTRY}/slurmd:25.11-ubuntu24.04 AS slurmd-pyxis

ARG DEBIAN_FRONTEND=noninteractive

COPY --from=download /tmp/*.deb ./
COPY --from=download /etc/enroot/hooks.d/* /etc/enroot/hooks.d/
COPY --from=download /usr/share/bash-completion/completions/* /usr/share/bash-completion/completions/

# Ref: https://github.com/NVIDIA/pyxis?tab=readme-ov-file#with-a-deb-package
# Ref: https://github.com/NVIDIA/enroot/blob/25.11/doc/installation.md
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
  --mount=type=cache,target=/var/lib/apt,sharing=locked <<EOR
# Install Pyxis+Enroot
set -xeuo pipefail
apt-get -qq update
apt-get -qq -y upgrade
apt-get -qq -y install --no-install-recommends --fix-broken \
  ca-certificates gpg \
  bash-completion \
  fuse-overlayfs pigz squashfuse \
  ./*.deb
rm *.deb
# Configure
mkdir -m 777 -p /usr/share/enroot/enroot-data/
mkdir -m 755 -p /run/enroot/
mkdir -m 644 -p /etc/slurm/plugstack.conf.d/
ln -s /usr/share/pyxis/pyxis.conf /etc/slurm/plugstack.conf.d/pyxis.conf
# Fix NVIDIA proc mount for GPUs
sed -i '2i mount -t proc none /proc 2>/dev/null || true' /usr/local/bin/entrypoint.sh
sed -i '2i mount -t tmpfs tmpfs /tmp 2>/dev/null || true' /usr/local/bin/entrypoint.sh
EOR

ADD https://nvidia.github.io/libnvidia-container/gpgkey libnvidia-container.gpgkey
ADD https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list /etc/apt/sources.list.d/nvidia-container-toolkit.list

# Ref: https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html#with-apt-ubuntu-debian
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
  --mount=type=cache,target=/var/lib/apt,sharing=locked <<EOR
# Install Nvidia Container Toolkit
set -xeuo pipefail
gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg ./libnvidia-container.gpgkey
sed -i 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' /etc/apt/sources.list.d/nvidia-container-toolkit.list
apt-get -qq update
apt-get -qq -y install --no-install-recommends \
  nvidia-container-toolkit
rm *.gpgkey
EOR

################################################################################
FROM ${REGISTRY}/login:25.11-ubuntu24.04 AS login-pyxis

ARG DEBIAN_FRONTEND=noninteractive

COPY --from=download /tmp/*.deb ./
COPY --from=download /etc/enroot/hooks.d/* /etc/enroot/hooks.d/
COPY --from=download /usr/share/bash-completion/completions/* /usr/share/bash-completion/completions/

# Ref: https://github.com/NVIDIA/pyxis?tab=readme-ov-file#with-a-deb-package
# Ref: https://github.com/NVIDIA/enroot/blob/25.11/doc/installation.md
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
  --mount=type=cache,target=/var/lib/apt,sharing=locked <<EOR
# Install Pyxis+Enroot
set -xeuo pipefail
apt-get -qq update
apt-get -qq -y upgrade
apt-get -qq -y install --no-install-recommends --fix-broken \
  ca-certificates gpg \
  bash-completion \
  fuse-overlayfs pigz squashfuse \
  ./*.deb
rm *.deb
# Configure
mkdir -m 777 -p /usr/share/enroot/enroot-data/
mkdir -m 755 -p /run/enroot/
mkdir -m 644 -p /etc/slurm/plugstack.conf.d/
ln -s /usr/share/pyxis/pyxis.conf /etc/slurm/plugstack.conf.d/pyxis.conf
# Fix NVIDIA proc mount for GPUs
sed -i '2i mount -t proc none /proc 2>/dev/null || true' /usr/local/bin/entrypoint.sh
sed -i '2i mount -t tmpfs tmpfs /tmp 2>/dev/null || true' /usr/local/bin/entrypoint.sh
EOR

ADD https://nvidia.github.io/libnvidia-container/gpgkey libnvidia-container.gpgkey
ADD https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list /etc/apt/sources.list.d/nvidia-container-toolkit.list

# Ref: https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html#with-apt-ubuntu-debian
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
  --mount=type=cache,target=/var/lib/apt,sharing=locked <<EOR
# Install Nvidia Container Toolkit
set -xeuo pipefail
gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg ./libnvidia-container.gpgkey
sed -i 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' /etc/apt/sources.list.d/nvidia-container-toolkit.list
apt-get -qq update
apt-get -qq -y install --no-install-recommends \
  nvidia-container-toolkit
rm *.gpgkey
EOR
